{"version":3,"sources":["utils.js","gui.js","sound.js","colors.js","index.js"],"names":["createNode","n","v","p","document","createElementNS","setAttributeNS","replace","m","o","s","toLowerCase","downloadContent","filename","content","blob","Blob","event","MouseEvent","window","a","createElement","download","href","URL","createObjectURL","dispatchEvent","emptyElement","element","firstChild","removeChild","getParameterByName","name","url","location","regex","results","RegExp","exec","decodeURIComponent","getQueryStringObject","search","substring","split","map","str","key","value","decodeURI","reduce","prev","curr","Object","assign","getQueryStringObjectFromHash","hash","serializeObject","obj","keys","k","join","controls","id","type","min","max","step","Noise","track","audioContext","AudioContext","webkitAudioContext","stopNoise","audioSource","stop","play","playNoise","buildTrack","createBufferSource","gainNode","createGain","connect","destination","createNoise","lastOut","bufferSize","sampleRate","noiseBuffer","createBuffer","output","getChannelData","i","white","Math","random","buffer","setGain","volume","gain","setValueAtTime","currentTime","linearRampToValueAtTime","loop","start","COLORS","settings","mask","setSettings","options","sound","onload","canvas","context","getContext","width","height","drawImage","getImageData","data","src","setAttributes","attributes","entries","forEach","val","setAttribute","elements","control","label","text","createTextNode","input","innerHTML","appendChild","addEventListener","target","Array","from","querySelectorAll","memo","item","getElementById","params","labelId","SIZE","imageData","ArrayBuffer","length","bufferViewInt8","Uint8ClampedArray","bufferViewInt32","Uint32Array","levelBuffer","levelBufferViewInt8","x","Number","MAX_SAFE_INTEGER","rain","w","offsetWidth","style","y","index","alpha","odds","moveDroplet","set","putImageData","nextLevel","round","rand","horizontalMovement","floor","parseFloat","horizontalMovementOffset","horizontalMovementMax","verticalMovement","verticalMovementOffset","verticalMovementMax","nextColor","color","render","requestAnimationFrame"],"mappings":"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","file":"bitfire.c8872ef7.js","sourceRoot":"..","sourcesContent":["export const createNode = (n, v) => {\n    n = document.createElementNS(\"http://www.w3.org/2000/svg\", n);\n    for (var p in v)\n        n.setAttributeNS(null, p.replace(/[A-Z]/g, function (m, p, o, s) {\n            return \"-\" + m.toLowerCase();\n        }), v[p]);\n    return n\n};\n\nexport const downloadContent = (filename, content) => {\n    const blob = new Blob([content]);\n    const event = new MouseEvent('click', {\n        'view': window,\n        'bubbles': true,\n        'cancelable': true\n    });\n    const a = document.createElement(\"a\");\n    a.download = filename;\n    a.href = URL.createObjectURL(blob);\n    a.dispatchEvent(event);\n};\n\nexport const emptyElement = element => {\n    while (element.firstChild) {\n        element.removeChild(element.firstChild);\n    }\n    return element;\n};\n\nexport const getParameterByName = (name, url) => {\n    if (!url) {\n        url = window.location.href;\n    }\n    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n        results = regex.exec(url);\n    if (!results) return undefined;\n    if (!results[2]) return \"\";\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n};\n\nexport const getQueryStringObject = () => {\n    return window.location.search.substring(1).split('&')\n        .map(str => {\n            let [key, value] = str.split('=');\n            return {[key]: decodeURI(value)};\n        })\n        .reduce((prev, curr) => Object.assign(prev, curr));\n};\n\nexport const getQueryStringObjectFromHash = () => {\n    return window.location.hash.substring(1).split('&')\n        .map(str => {\n            let [key, value] = str.split('=');\n            return {[key]: decodeURI(value)};\n        })\n        .reduce((prev, curr) => Object.assign(prev, curr));\n};\n\n\nexport const serializeObject = obj => `#${Object.keys(obj).map(k=>`${k}=${obj[k]}`).join('&')}`;\n","export const controls = [{\n    id: 'mask',\n    type: 'range',\n    min: 0,\n    max: 5,\n    step: 1,\n    value: 0\n}, {\n    id: 'horizontalMovementOffset',\n    type: 'range',\n    min: -2,\n    max: 2,\n    step: 0.1,\n    value: 0\n}, {\n    id: 'horizontalMovementMax',\n    type: 'range',\n    min: 0,\n    max: 10,\n    step: 1,\n    value: 1\n}, {\n    id: 'verticalMovementOffset',\n    type: 'range',\n    min: -100,\n    max: 100,\n    step: 1,\n    value: -1\n}, {\n    id: 'verticalMovementMax',\n    type: 'range',\n    min: -100,\n    max: 100,\n    step: 1,\n    value: 5\n}, {\n    id: 'sound',\n    type: 'range',\n    min: 0,\n    max: 1,\n    step: 1,\n    value: 0\n}, {\n    id: 'color',\n    type: 'range',\n    min: 0,\n    max: 3,\n    step: 1,\n    value: 0\n}];","export const Noise = (function () {\n\n    const track = {};\n    const audioContext = new (window.AudioContext || window.webkitAudioContext);\n\n    function createNoise(track) {\n        var lastOut = 0.0;\n        const bufferSize = 2 * audioContext.sampleRate;\n        const noiseBuffer = audioContext.createBuffer(1, bufferSize, audioContext.sampleRate);\n        const output = noiseBuffer.getChannelData(0);\n\n        for (let i = 0; i < bufferSize; i++) {\n            var white = Math.random() * 2 - 1;\n            output[i] = (lastOut + (0.02 * white)) / 1.02;\n            lastOut = output[i];\n            output[i] *= 3.5;\n        }\n\n        track.audioSource.buffer = noiseBuffer;\n    }\n\n    function stopNoise() {\n        if (track.audioSource) {\n            track.audioSource.stop();\n        }\n    }\n\n\n    function buildTrack(track) {\n        track.audioSource = audioContext.createBufferSource();\n        track.gainNode = audioContext.createGain();\n        track.audioSource.connect(track.gainNode);\n        track.gainNode.connect(audioContext.destination);\n    }\n\n    function setGain(track) {\n        track.volume = 0.1;\n        track.gainNode.gain.setValueAtTime(0, audioContext.currentTime);\n        track.gainNode.gain.linearRampToValueAtTime(track.volume / 4, audioContext.currentTime / 2);\n        track.gainNode.gain.linearRampToValueAtTime(track.volume, audioContext.currentTime);\n\n    }\n\n    function playNoise() {\n        stopNoise(track);\n        buildTrack(track);\n        createNoise(track);\n        setGain(track);\n        track.audioSource.loop = true;\n        track.audioSource.start();\n    }\n\n    // Expose functions:\n    return {\n        play: playNoise,\n        stop: stopNoise\n    }\n\n}());","// A gray-scale height-map.\nexport const COLORS = [[\n    [255, 255, 255],\n    [240, 240, 240],\n    [217, 217, 217],\n    [189, 189, 189],\n    [150, 150, 150],\n    [115, 115, 115],\n    [82, 82, 82],\n    [37, 37, 37],\n    [0, 0, 0]\n], [\n    [255, 255, 204],\n    [255, 237, 160],\n    [254, 217, 118],\n    [254, 178, 76],\n    [253, 141, 60],\n    [252, 78, 42],\n    [227, 26, 28],\n    [189, 0, 38],\n    [128, 0, 38]\n], [\n    [255, 247, 251],\n    [236, 231, 242],\n    [208, 209, 230],\n    [166, 189, 219],\n    [116, 169, 207],\n    [54, 144, 192],\n    [5, 112, 176],\n    [4, 90, 141],\n    [2, 56, 88]\n], [\n    [247, 252, 245],\n    [229, 245, 224],\n    [199, 233, 192],\n    [161, 217, 155],\n    [116, 196, 118],\n    [65, 171, 93],\n    [35, 139, 69],\n    [0, 109, 44],\n    [0, 68, 27]\n]];","import {getQueryStringObjectFromHash, serializeObject} from './utils.js';\n\n\nimport {controls} from \"./gui.js\";\nimport {Noise} from './sound';\nimport {COLORS} from \"./colors\";\n\nlet settings = {\n    mask: []\n};\n\nconst setSettings = options => {\n    if (options.sound !== settings.sound) {\n        if (settings.sound === \"1\") {\n            Noise.play();\n        } else {\n            Noise.stop();\n        }\n    }\n\n    if (settings.mask !== options.mask) {\n        const mask = document.createElement('img');\n        mask.onload = function () {\n\n            var canvas = document.createElement('canvas');\n            var context = canvas.getContext('2d');\n            canvas.width = mask.width;\n            canvas.height = mask.height;\n            context.drawImage(mask, 0, 0);\n            settings.mask = context.getImageData(0, 0, mask.width, mask.height).data;\n\n        };\n        mask.src = `masks/${options.mask}.gif`;\n\n    }\n\n    settings = Object.assign(settings, options);\n};\n\nconst setAttributes = (element, attributes) => Object.entries(attributes)\n    .forEach(([key, val]) =>\n        element.setAttribute(key, val));\n\nconst elements = controls.map(control => {\n    const label = document.createElement('label');\n    const text = document.createTextNode(control.id);\n    const input = document.createElement('input');\n\n    setAttributes(input, control);\n\n    const val = document.createElement('span');\n    val.id = `label-${control.id}`;\n    val.innerHTML = ` (${control.value})`;\n\n    label.appendChild(text);\n    label.appendChild(val);\n    label.appendChild(input);\n\n    input.addEventListener('input', event => {\n        val.innerHTML = ` (${event.target.value})`;\n        const options = Array.from(document.querySelectorAll('input'))\n            .map(({id, value}) => ({[id]: value}))\n            .reduce((memo, item) => Object.assign(memo, item), {});\n        location.hash = serializeObject(options);\n    });\n\n    return label;\n});\n\nconst target = document.getElementById('controls');\nelements.forEach(element => target.appendChild(element));\n\n// const search = window.location.search;\nconst params = getQueryStringObjectFromHash();\nObject.keys(params).forEach(key => {\n    const input = document.getElementById(key);\n    if (input) {\n        input.value = params[key];\n    }\n});\n\nwindow.addEventListener(\"hashchange\", event => {\n    const options = getQueryStringObjectFromHash();\n    setSettings(options);\n    Object.keys(options).forEach(key => {\n        const input = document.getElementById(key);\n        if (input) {\n            input.value = options[key];\n            const labelId = `label-${key}`;\n            document.getElementById(labelId).innerHTML = ` (${options[key]})`;\n        }\n    });\n});\n\nconst options = Array.from(document.querySelectorAll('input'))\n    .map(({id, value}) => ({[id]: value}))\n    .reduce((memo, item) => Object.assign(memo, item), {});\n\nsetSettings(options);\n\nconst SIZE = 256;\n\n// Setup the canvas.\nconst canvas = document.getElementById('canvas');\nconst context = canvas.getContext('2d');\n\ncanvas.width = SIZE;\ncanvas.height = SIZE;\n\nconst imageData = context.getImageData(0, 0, SIZE, SIZE);\n\n// One buffer to hold the color data for each pixel.\nconst buffer = new ArrayBuffer(imageData.data.length);\nconst bufferViewInt8 = new Uint8ClampedArray(buffer);\nconst bufferViewInt32 = new Uint32Array(buffer);\n\n// One buffer to hold the height map level for each pixel.\nconst levelBuffer = new ArrayBuffer(imageData.data.length);\nconst levelBufferViewInt8 = new Uint8ClampedArray(levelBuffer).map(x => Number.MAX_SAFE_INTEGER);\n\nfunction rain() {\n\n    const w = canvas.offsetWidth;\n    canvas.style.height = w;\n\n    for (let y = 0; y < SIZE; y += 1) {\n        for (let x = 0; x < SIZE; x += 1) {\n\n            const index = (y) * SIZE + x;\n            const alpha = settings.mask[index * 4] || 0;\n\n            const odds = 1 / 255 * (255 - alpha);\n            if (alpha && Math.random() > odds) {\n                levelBufferViewInt8[index] = 0;\n            }\n\n            moveDroplet(index);\n        }\n    }\n\n    // Update the canvas with the new pixel values.\n    imageData.data.set(bufferViewInt8);\n    context.putImageData(imageData, 0, 0);\n}\n\nfunction moveDroplet(src) {\n\n    const nextLevel = levelBufferViewInt8[src] + Math.round(Math.random() * 1.3);\n\n    // Generate a 0, 1 or 2.\n    const rand = Math.round(Math.random() * 2.0);\n\n    // Add horizontal movement to create a wind effect.\n    // const horizontalMovement = Math.random() > 0.8\n    //     ? src - rand + Math.floor((settings.wind * 8 - 3))\n    //     : src;\n    const horizontalMovement = src + Math.floor(parseFloat(settings.horizontalMovementOffset) + Math.random() * parseFloat(settings.horizontalMovementMax));\n\n\n    // Every 1 in 5 the rain will move up-wards and create the\n    // street splash effect.\n    const verticalMovement = Math.floor(parseFloat(settings.verticalMovementOffset) + Math.random() * parseFloat(settings.verticalMovementMax));\n\n    levelBufferViewInt8[horizontalMovement + (SIZE * verticalMovement)] = nextLevel - (rand & 1);\n\n    const nextColor = COLORS[settings.color][nextLevel] || 11;\n\n    // Set the new pixel value.\n    bufferViewInt32[src - SIZE] =\n        (255 << 24) |           // Alpha\n        (nextColor[2] << 16) |  // Blue\n        (nextColor[1] << 8) |   // Green\n        nextColor[0];           // Red\n}\n\nfunction render() {\n    rain();\n\n    // Go again!\n    requestAnimationFrame(() => render());\n}\n\n// Go!\nconst mask = document.createElement('img');\nmask.onload = function () {\n\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    canvas.width = mask.width;\n    canvas.height = mask.height;\n    context.drawImage(mask, 0, 0);\n    settings.mask = context.getImageData(0, 0, mask.width, mask.height).data;\n\n};\nmask.src = `masks/${options.mask}.gif`;\n\nrender();"]}